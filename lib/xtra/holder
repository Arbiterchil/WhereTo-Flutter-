 Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: <Widget>[
                  SizedBox(height: 50,),
                  Text("Welcome in, Where To",style: TextStyle(fontSize: 26,fontWeight: FontWeight.bold),),
                  SizedBox(height: 6,),
                  Text("Sign in to continue!",style: TextStyle(fontSize: 20,color: Colors.grey.shade400),),
                ],
              ),
              Form(
                key: key,
                child: Column(
                  children: <Widget>[
                    SizedBox(height: 180,),
                    TextFormField(
                      validator: (val)=> contactNumber.text.length < 11 ? 'Mobile Number Consists of 11 Digits' :null,
                      controller: contactNumber,
                      decoration: InputDecoration(
                        labelText: "Mobile Number",
                        labelStyle: TextStyle(fontSize: 14,color: Colors.grey.shade400),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                          borderSide: BorderSide(
                            color: Colors.grey.shade300,
                          ),  
                        ),
                        
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10),
                            borderSide: BorderSide(
                              color: Colors.red,
                            )
                        ),
                      ),
                      keyboardType: TextInputType.number,
                      
                    ),
                    SizedBox(height: 16,),
                    TextFormField(
                      validator: (val) => val.isEmpty ? ' Empty' : null,
                      controller: passwordController,
                      obscureText: true,
                      decoration: InputDecoration(
                        labelText: "Password",
                        labelStyle: TextStyle(fontSize: 14,color: Colors.grey.shade400),
                        enabledBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(10),
                          borderSide: BorderSide(
                            color: Colors.grey.shade300,
                          ),
                          
                        ),
                        focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10),
                            borderSide: BorderSide(
                              color: Colors.red,
                              
                            )
                        ),
                      ),
                    ),
                    
                    SizedBox(height: 12,),
                    Align(
                      alignment: Alignment.topRight,
                      child: Text("Forgot Password ?",style: TextStyle(fontSize: 14,fontWeight: FontWeight.w600),),
                    ),
                    SizedBox(height: 30,),
                    Container(
                      height: 50,
                      width: double.infinity,
                      child: FlatButton(
                        
                        onPressed:  _login,

                        padding: EdgeInsets.all(0),
                        child: Ink(
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(6),
                            gradient: LinearGradient(
                              begin: Alignment.centerLeft,
                              end: Alignment.centerRight,
                              colors: [
                                Color(0xffffb400),
                                Color(0xffff5f6d),
                                Color(0xffffb400),
                              ],
                            ),
                          ),
                        
                          child: Container(
                            alignment: Alignment.center,
                            constraints: BoxConstraints(maxWidth: double.infinity,minHeight: 50),
            
                            child: Text("Login",
                            style: TextStyle(
                              color: Colors.white,
                              fontWeight: FontWeight.bold),
                              textAlign: TextAlign.center,),
                          ),
                        ),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(6),
                        ),
                      ),
                    ),
                    SizedBox(height: 16,),
                  ],
                ),
              ),
              Padding(
                padding: EdgeInsets.only(bottom: 10),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: <Widget>[
                    SizedBox(height: 150,),
                    Text("I'm a new user.",style: TextStyle(fontWeight: FontWeight.bold),),
                    GestureDetector(
                      onTap: (){
                        Navigator.push(context, MaterialPageRoute(builder: (context){
                          return SignupPage();
                        }));
                      },
                      child: Text("Sign up",style:
                       TextStyle(fontWeight: FontWeight.bold,color: Color(0xffffb400)),),
                    )
                  ],
                ),
              ),










              _buildAxisHorin(){
      return  Container(  
            height: 190.0,
            child: FutureBuilder(
              future: null,
              builder: (BuildContext context , AsyncSnapshot snapshot){
                if(snapshot.data == null){
                  return Container(
                    child: Center(
                      child: Text("Getting the Data Please Wait..."),
                    ),
                  );
                }else{
                  return ListView.builder(
              scrollDirection: Axis.horizontal,
              itemCount: snapshot.data.length,
              itemBuilder: (BuildContext context, int index){
                return GestureDetector(
                  onTap: (){
                    
                  },
                  child: Padding(
                    padding: EdgeInsets.only(
                      top: 10.0,
                      left: 10.0,
                      right: 10.0
                    ),
                    child: Column(
                      children: <Widget>[
                         Container(
                          width: 120.0,
                          height: 140.0,
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.all(Radius.circular(5.0)),
                            shape: BoxShape.rectangle,
                            image: DecorationImage(
                              image: 
                              AssetImage("asset/img/${snapshot.data[index].restaurantName}.png"),fit: BoxFit.cover,
                            ),
                          ),
                        ),
                        SizedBox(height: 10.0,),
                        Container(
                          width: 100.0,
                          child: Text(snapshot.data[index].restaurantName,
                          maxLines: 2,
                          style: TextStyle(
                            height: 1.4,
                            color: Colors.black,
                            fontWeight: FontWeight.bold,
                            fontSize: 14.0
                          ),
                          ),
                        ),
                       
                        // SizedBox(height: 5.0,),

                      ],
                    ),
                  ),
                );
              },
              );
                }
              },
            ),
      );




 FutureBuilder(
                    future: _menuRest(getmeouts),
                    builder: (BuildContext context,AsyncSnapshot snapshot ){

                           if(snapshot.data == null){
                  return Container(
                    child: Center(
                      child: Text("Restaurants Loading"),
                    ),
                  );
                }else{
                    return ListView.builder(
                      scrollDirection: Axis.vertical,
                      itemCount: snapshot.data.length,
                      itemBuilder: (BuildContext context , int index){
                          // return snapshot.data[index].restaurantName.contains(searchit)
                          // |snapshot.data[index].address.contains(searchit) ? GestureDetector(

                            
                           return GestureDetector(
                            onTap: (){

                              // Navigator.push(context,
                              //   new MaterialPageRoute(builder: (context) 
                              //   => ListStactic(
                              //     restaurant: snapshot.data[index]
                              //     )
                              //   )
                              //   );
                            },
                            child: Padding(
                              padding: const EdgeInsets.only(left:30.0,right: 30.0,top: 20.0,),
                              child: Container(
                                padding: const EdgeInsets.all(8.0),
                                height: 90.0,
                                width: MediaQuery.of(context).size.width,
                                decoration: BoxDecoration(
                                  color: Colors.amber,
                                  borderRadius: BorderRadius.circular(10.0),
                                ),
                                child: Row(
                                  children: <Widget>[
                                    Align(
                                      alignment: Alignment.centerLeft,
                                      child: Container(
                                        height: 80.0,
                                        width: 80.0,
                                        child: CircleAvatar(
                                          backgroundImage: AssetImage("asset/img/app.jpg"),
                                        ),
                                      ),
                                    ),
                                    SizedBox(width: 20.0,),
                                    Column(
                                      mainAxisAlignment: MainAxisAlignment.start,
                                      children: <Widget>[
                                         Align(
                                      alignment: Alignment.topLeft,
                                      child: Text(snapshot.data[index].menuName,
                                      style: TextStyle(
                                        fontSize: 18.0,
                                        color: Colors.black,
                                        fontWeight: FontWeight.bold,
                                      ),),
                                    ),
                                    SizedBox(height: 15.0,),
                                     Align(
                                      alignment: Alignment.bottomLeft,
                                      child: Text(snapshot.data[index].price.toString(),
                                      style: TextStyle(
                                        fontSize: 18.0,
                                        color: Colors.black54,
                                        fontWeight: FontWeight.bold,
                                      ),),
                                    ),
                                      ],
                                    )
                                  ],
                                ),
                              ),
                              ),
                            );
                          // ) : Container();
                        },
                      );

                }

                    },
                  ),

 Container(
                   width: MediaQuery.of(context).size.width,
                   height: 180.0,
                   decoration: BoxDecoration(
                     image: new DecorationImage(
                       image:AssetImage("asset/img/app.jpg"),
                       fit: BoxFit.cover,
                        ),
                   ),
                   child: Align(
                     alignment: Alignment.center,
                     child: Padding(
                       padding: const EdgeInsets.only(left: 40.0, right: 40.0,),
                       child: Container(
                         height: 50.0,
                         decoration: BoxDecoration(
                    color: Colors.white,
                    borderRadius: BorderRadius.circular(30.0),
                         ),
                         child: TextField(
                            style: TextStyle(
                              color: Colors.black,
                            ),
                            decoration: InputDecoration(
                              border: InputBorder.none,
                              contentPadding: const EdgeInsets.only(top:14.0,),
                              prefixIcon: Icon(
                                Icons.search,
                                color: Colors.black,
                              ),
                              hintText: "Search",
                            ),
                            onChanged: (input){},
                          ),
                       ),
                     )
                   ),
                 ),   
                 Container(
                   height: 180.0,
                   decoration: BoxDecoration(
                     gradient: LinearGradient(
                        colors: [
                          Colors.white.withOpacity(1.0),
                          Colors.white38.withOpacity(0.0)
                        ],
                        begin: Alignment.bottomCenter,
                        end: Alignment.topCenter,
                        stops: [
                          0.0,
                          0.9,
                        ],
                     ),
                   ),
                 ),



































                 TabBar(
                             controller: tabs,
                           unselectedLabelColor: Colors.black,
                           indicator: BoxDecoration(
                             color: Color(0xFF3936ea),
                             borderRadius: BorderRadius.only(
                               topLeft: Radius.circular(20),
                               topRight: Radius.circular(20),
                             ),
                             ),
                         isScrollable: true,
                         tabs: snapshot.data.map<Widget>((TyepCateg ty) {
                              return Container(
                                width: 80.0,
                                child: Tab(
                                text: ty.categoryName,
                              ),
                              );
                         }).toList(),
                     ),
                      TabBarView(
                        children:snapshot.data.map<Widget>((TyepCateg ty) {
                              return Container(
                                width: 80.0,
                                child: Tab(
                                text: ty.categoryName,
                              ),
                              );
                         }).toList(),),




      
